if this.oneChildActive():

  # Interruptive Edges:
  if req_mood == true:
    for x in this.states:
      states.remove(x)
      cancelTimeout(x)
    for x in this.superchildren:
      x.remove_states() # l√∂scht auch deren Timeouts
    states.add("answer_node")

  else:
    # pos_node_in
    if "pos_node_in" in states:
      if true:
        states.remove("pos_node_in")
        states.add("cool_node")

    # pos_node_out
    if "pos_node_out" in states:
      if true:
        states.remove("pos_node_out")
        states.add("excuse_node")
    # Gestrichelte Kante hier nicht notwendig, da Edge aus pos_node raus eine Epsilon-Kante ist

    # cool_node
    if "cool_node" in states:
      emitDA("Cool")

      if true:
        states.remove("cool_node")
        states.add("why_node")

      if no_timeout("cool_node") and "cool_node" in states:
        states.remove("cool_node")
        states.add("pos_node_out")

    # why node
    if "why_node" in states:
      emitDA("Why are you so happy today?")

      if true:
        timeout("why_node", 10000) {
          states.remove("why_node")
          states.add("great_node")
        }

      if no_timeout("why_node") and "cool_node" in states:
        states.remove("why_node")
        states.add("pos_node_out")

    # great_node
    if "great_node" in states:
      emitDA("That's great")
      states.remove("great_node")

      if no_timeout("great_node") and "cool_node" in states:
        states.remove("great_node")
        states.add("pos_node_out")
