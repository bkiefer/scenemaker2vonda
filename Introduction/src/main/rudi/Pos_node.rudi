
myBindings = getRdf("<cat:pos_node_bindings>");
parentBindings = getRdf("<cat:hello_node_bindings>");

setup_pos_node:
	if(parentBindings.initiated.contains("pos_node")) {
		if (!myBindings) {

			myBindings = new Pos_node;
			parentBindings.super_children += myBindings;
			myBindings.parent = parentBindings;
		}

		myBindings.simple_children += "pos_node_in";
		parentBindings.initiated -= "pos_node";
	}

pass_by_pos_node:
	if(!myBindings) {
		cancel;
	}

pos_node_interruptive_edge_1:
	if (lastDA() >= #Question(Mood)) {
	
		interruptive_transition(myBindings, parentBindings, "answer_node");
		cancel;
	} 

pos_node_in:
	if (myBindings.simple_children.contains("pos_node_in")) {

		transition("pos_node_in", "cool_node", myBindings, myBindings);
	}

pos_node_out:
	if (myBindings.simple_children.contains("pos_node_out")) {
	
		// Bei der Transition sollten die Variablen-Bindings aus myBindings (nicht dem parent) benutzt werden	
		transition("pos_node_out", "excuse_node", myBindings, parentBindings);
		
		if(test_inactive(myBindings)) {
			// TODO: Finde noch den richtigen Code hierf√ºr!!
			parentBindings.super_children -= myBindings;
			delete(myBindings);
		}

		check_out_transition("pos_node_out", "hello_node_out", myBindings);

	}
	
cool_node:
	if (myBindings.simple_children.contains("cool_node")): {

		emitDA(#Connecting(PositiveFeeling));

		transition("cool_node", "why_node", myBindings, myBindings);

		check_out_transition("cool_node", "pos_node_out", myBindings);
	}

why_node:
	if (myBindings.simple_children.contains("why_node")) {
		
		emitDA(#WHQuestion(PositiveMood));
		
		timeout_transition("why_node", "great_node", myBindings, myBindings, 10000);
		
		check_out_transition("why_node", "pos_node_out", myBindings);
	}

great_node:
	if (myBindings.simple_children.contains("great_node")) {

		emitDA(#Connecting(Enthusiastic));

		states.remove("great_node");

		check_out_transition("great_node", "pos_node_out", myBindings);
	}





