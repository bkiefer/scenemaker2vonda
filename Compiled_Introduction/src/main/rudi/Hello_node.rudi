
setup_hello_node: 
	if(mainAgent.initiated.contains("hello_node")) {
		if(!hello_node.active) {

			hello_node.active = true;
			mainAgent.super_children += hello_node;

			hello_node.timedOut = true;
		}

		hello_node.simple_children += "hello_node_in";
		hello_node.imminent_simple_children += "hello_node_in";
		mainAgent.initiated -= "hello_node";
	}


pass_by_hello_node: 
	if(!hello_node.active) {
		cancel;
	}

hello_node_interruptive_edge_1:
	if( lastDA() >= #InitialGoodbye(Bye) ) {

		interruptive_transition(hello_node, mainAgent, "bye_node", false);

		cancel;
	}

hello_node_interruptive_edge_2:
	if( mainAgent.nice < -1 ) {

		interruptive_transition(hello_node, mainAgent, "excuse_node", false);

		cancel;
	}

hello_node_in:
	if(hello_node.simple_children.contains("hello_node_in")) {



		hello_node.imminent_simple_children -= "hello_node_in";

			transition("hello_node_in", "hi_node", hello_node, hello_node, false);

			check_out_transition("hello_node_in", "hello_node_out", hello_node, hello_node);
	}

hello_node_out: 
	if(hello_node.simple_children.contains("hello_node_out")) {

		hello_node.imminent_simple_children -= "hello_node_out";

		transition("hello_node_out", "bye_node", hello_node, mainAgent, false);

		if(test_inactive(hello_node)) {

			mainAgent.super_children -= hello_node;
			set_inactive(hello_node);
		}

		check_out_transition("hello_node_out", "mainAgent_out", hello_node, mainAgent);
	}

something_else_node:
	if(hello_node.simple_children.contains("something_else_node")) {

		if(hello_node.imminent_simple_children.contains("something_else_node")) {

			emitDA(#Question(MoreTalking));
			lastDAprocessed();
		}

		timeout_transition("something_else_node", "choose_valediction_node", hello_node, hello_node, false, 20000);

		hello_node.imminent_simple_children -= "something_else_node";

		if ( lastDA() >= #Confirm(MoreTalking) ) {
			transition("something_else_node", "what_node", hello_node, hello_node, false);
		}

		if ( lastDA() >= #Disconfirm(MoreTalking) ) {
			transition("something_else_node", "choose_valediction_node", hello_node, hello_node, false);
		}

		if ( lastDA() >= #Question(Mood) ) {
			transition("something_else_node", "answer_node", hello_node, hello_node, false);
		}


		check_out_transition("something_else_node", "hello_node_out", hello_node, hello_node);
	}

what_node:
	if(hello_node.simple_children.contains("what_node")) {

		if(hello_node.imminent_simple_children.contains("what_node")) {

			emitDA(#Suggestion(MoreTalking));
			lastDAprocessed();
		}

		timeout_transition("what_node", "thanks_node", hello_node, hello_node, false, 20000);

		hello_node.imminent_simple_children -= "what_node";

		if ( lastDA() >= #DeclineSuggestion(MoreTalking) ) {
			transition("what_node", "nevermind_node", hello_node, hello_node, false);
		}


		check_out_transition("what_node", "hello_node_out", hello_node, hello_node);
	}

nevermind_node:
	if(hello_node.simple_children.contains("nevermind_node")) {

		if(hello_node.imminent_simple_children.contains("nevermind_node")) {

			emitDA(#SocialFunction(NoTrust));
			mainAgent.nice = mainAgent.nice - 1;
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "nevermind_node";

		transition("nevermind_node", "something_else_node", hello_node, hello_node, false);

		check_out_transition("nevermind_node", "hello_node_out", hello_node, hello_node);
	}

mean_leave_node:
	if(hello_node.simple_children.contains("mean_leave_node")) {

		if(hello_node.imminent_simple_children.contains("mean_leave_node")) {

			emitDA(#InitialGoodbye(Mean));
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "mean_leave_node";


		check_out_transition("mean_leave_node", "hello_node_out", hello_node, hello_node);
	}

timed_out_node:
	if(hello_node.simple_children.contains("timed_out_node")) {

		if(hello_node.imminent_simple_children.contains("timed_out_node")) {

			hello_node.timedOut = true;
			mainAgent.nice = mainAgent.nice - 1;
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "timed_out_node";

		transition("timed_out_node", "how_node", hello_node, hello_node, false);

		check_out_transition("timed_out_node", "hello_node_out", hello_node, hello_node);
	}

nice_leave_node:
	if(hello_node.simple_children.contains("nice_leave_node")) {

		if(hello_node.imminent_simple_children.contains("nice_leave_node")) {

			emitDA(#InitialGoodbye(Nice));
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "nice_leave_node";


		check_out_transition("nice_leave_node", "hello_node_out", hello_node, hello_node);
	}

answer_node:
	if(hello_node.simple_children.contains("answer_node")) {

		if(hello_node.imminent_simple_children.contains("answer_node")) {

			emitDA(#Inform(Mood));
			mainAgent.nice = mainAgent.nice + 2;
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "answer_node";

		transition("answer_node", "something_else_node", hello_node, hello_node, false);

		check_out_transition("answer_node", "hello_node_out", hello_node, hello_node);
	}

choose_valediction_node:
	if(hello_node.simple_children.contains("choose_valediction_node")) {

		hello_node.imminent_simple_children -= "choose_valediction_node";

		if ( mainAgent.nice > 0 ) {
			transition("choose_valediction_node", "nice_leave_node", hello_node, hello_node, false);
		}

		if ( mainAgent.nice <= 0 ) {
			transition("choose_valediction_node", "mean_leave_node", hello_node, hello_node, false);
		}


		check_out_transition("choose_valediction_node", "hello_node_out", hello_node, hello_node);
	}

thanks_node:
	if(hello_node.simple_children.contains("thanks_node")) {

		if(hello_node.imminent_simple_children.contains("thanks_node")) {

			emitDA(#Thanking(Sharing));
			mainAgent.nice = mainAgent.nice + 1;
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "thanks_node";

		transition("thanks_node", "something_else_node", hello_node, hello_node, false);

		check_out_transition("thanks_node", "hello_node_out", hello_node, hello_node);
	}

hi_node:
	if(hello_node.simple_children.contains("hi_node")) {

		if(hello_node.imminent_simple_children.contains("hi_node")) {

			emitDA(#InitialGreeting(Greet));
			hello_node.timedOut = false;
			lastDAprocessed();
		}

		timeout_transition("hi_node", "timed_out_node", hello_node, hello_node, false, 5000);

		hello_node.imminent_simple_children -= "hi_node";

		if ( lastDA() >= #InitialGreeting(Greet) ) {
			transition("hi_node", "how_node", hello_node, hello_node, false);
		}


		check_out_transition("hi_node", "hello_node_out", hello_node, hello_node);
	}

how_node:
	if(hello_node.simple_children.contains("how_node")) {

		if(hello_node.imminent_simple_children.contains("how_node")) {

			emitDA(#ChoiceQuestion(Mood));
			lastDAprocessed();
		}

		hello_node.imminent_simple_children -= "how_node";

		transition("how_node", "wait_node", hello_node, hello_node, false);

		check_out_transition("how_node", "hello_node_out", hello_node, hello_node);
	}

wait_node:
	if(hello_node.simple_children.contains("wait_node")) {

		timeout_transition("wait_node", "timed_out_node", hello_node, hello_node, false, 20000);

		hello_node.imminent_simple_children -= "wait_node";

		if ( lastDA() >= #Question(Mood) ) {
			transition("wait_node", "answer_node", hello_node, hello_node, false);
		}

		if ( ( lastDA() >= #Inform(Mood) ) && ( lastDA().what == "negative" ) ) {
			transition("wait_node", "neg_node", hello_node, hello_node, true);
		}

		if ( ( lastDA() >= #Inform(Mood) ) && ( lastDA().what == "positive" ) ) {
			transition("wait_node", "pos_node", hello_node, hello_node, true);
		}


		check_out_transition("wait_node", "hello_node_out", hello_node, hello_node);
	}

import Pos_node;
import Neg_node;
