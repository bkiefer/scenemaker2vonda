
setup_MainAgent: 
	if(!MainAgent.active) {

		timeout("MainAgentStart", 1400) {

			MainAgent.active = true;
			MainAgent.simple_children += "MainAgent_in";

			MainAgent.nice = 0;
		}
	}


pass_by_MainAgent: 
	if(!MainAgent.active) {
		cancel;
	}

MainAgent_in:
	if(MainAgent.simple_children.contains("MainAgent_in")) {


			transition("MainAgent_in", "excuse_node", MainAgent, MainAgent);
			transition("MainAgent_in", "bye_node", MainAgent, MainAgent);

			check_out_transition("MainAgent_in", "MainAgent_out", MainAgent, MainAgent);
	}

MainAgent_out: 
	if(MainAgent.simple_children.contains("MainAgent_out")) {

		set_inactive(MainAgent);
		shutdown();
	}

hello_node:
	if(MainAgent.simple_children.contains("hello_node")) {

		transition("hello_node_out", "bye_node", hello_node, MainAgent);
		transition("hello_node_out", "bye_node", hello_node, MainAgent);
		transition("hello_node_out", "excuse_node", hello_node, MainAgent);

		check_out_transition("hello_node", "MainAgent_out", MainAgent, MainAgent);
	}

excuse_node:
	if(MainAgent.simple_children.contains("excuse_node")) {

		if(!hasActiveTimeout(excuse_node)) {

			emitDA("I have to go now");
		}

		transition("excuse_node", "bye_node", MainAgent, MainAgent);

		check_out_transition("excuse_node", "MainAgent_out", MainAgent, MainAgent);
	}

bye_node:
	if(MainAgent.simple_children.contains("bye_node")) {


		check_out_transition("bye_node", "MainAgent_out", MainAgent, MainAgent);
	}

import hello_node;
