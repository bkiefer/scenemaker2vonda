
setup_hello_node: 
	if(MainAgent.initiated.contains("hello_node")) {
		if(!hello_node.active) {

			hello_node.active = true;
			MainAgent.super_children += hello_node;

			hello_node.timedOut = true;
		}

		hello_node.simple_children += "hello_node_in";
		MainAgent.initiated -= "hello_node";
	}


pass_by_hello_node: 
	if(!hello_node.active) {
		cancel;
	}

hello_node_interruptive_edge_1:
	if( lastDA() >= InitialGoodbye(Bye) ) {

		interruptive_transition(hello_node, MainAgent, "bye_node");

		cancel;
	}

hello_node_interruptive_edge_2:
	if( nice < -1 ) {

		interruptive_transition(hello_node, MainAgent, "excuse_node");

		cancel;
	}

hello_node_in:
	if(hello_node.simple_children.contains("hello_node_in")) {

			

			transition("hello_node_in", "hi_node", hello_node, hello_node);

			check_out_transition("hello_node_in", "hello_node_out", hello_node, hello_node);
	}

hello_node_out: 
	if(hello_node.simple_children.contains("hello_node_out")) {

		transition("hello_node_out", "bye_node", hello_node, MainAgent);
		transition("hello_node_out", "bye_node", hello_node, MainAgent);
		transition("hello_node_out", "excuse_node", hello_node, MainAgent);
		if(test_inactive(hello_node)) {

			MainAgent.super_children -= hello_node;
			set_inactive(hello_node);
		}

		check_out_transition("hello_node_out", "MainAgent_out", hello_node, MainAgent);
	}

something_else_node:
	if(hello_node.simple_children.contains("something_else_node")) {

		if(!hasActiveTimeout(something_else_node)) {

			emitDA("Is there something else you want to talk about?");

			emitDA("Is there something else you want to talk about?");

		}

		transition("something_else_node", "what_node", hello_node, hello_node);
		transition("something_else_node", "choose_valediction_node", hello_node, hello_node);
		transition("something_else_node", "choose_valediction_node", hello_node, hello_node);
		transition("something_else_node", "answer_node", hello_node, hello_node);

		check_out_transition("something_else_node", "hello_node_out", hello_node, hello_node);
	}

what_node:
	if(hello_node.simple_children.contains("what_node")) {

		if(!hasActiveTimeout(what_node)) {

			emitDA("Alright, please tell me what is on your mind");

			emitDA("Alright, please tell me what is on your mind");

		}

		transition("what_node", "thanks_node", hello_node, hello_node);
		transition("what_node", "nevermind_node", hello_node, hello_node);

		check_out_transition("what_node", "hello_node_out", hello_node, hello_node);
	}

nevermind_node:
	if(hello_node.simple_children.contains("nevermind_node")) {

		if(!hasActiveTimeout(nevermind_node)) {

			emitDA("I see, you probably don't trust me yet.");
nice = nice - 1;

			emitDA("I see, you probably don't trust me yet.");
			nice = nice - 1;

		}

		transition("nevermind_node", "something_else_node", hello_node, hello_node);

		check_out_transition("nevermind_node", "hello_node_out", hello_node, hello_node);
	}

mean_leave_node:
	if(hello_node.simple_children.contains("mean_leave_node")) {

		if(!hasActiveTimeout(mean_leave_node)) {

			emitDA("I can't stand talking to you any longer anyway.");

			emitDA("I can't stand talking to you any longer anyway.");

		}


		check_out_transition("mean_leave_node", "hello_node_out", hello_node, hello_node);
	}

pos_node:
	if(hello_node.simple_children.contains("pos_node")) {

		if(!hasActiveTimeout(pos_node)) {

			

		}

		transition("pos_node_out", "something_else_node", pos_node, hello_node);
		transition("pos_node_out", "answer_node", pos_node, hello_node);

		check_out_transition("pos_node", "hello_node_out", hello_node, hello_node);
	}

timed_out_node:
	if(hello_node.simple_children.contains("timed_out_node")) {

		if(!hasActiveTimeout(timed_out_node)) {

			timedOut = true;
nice = nice - 1;

			timedOut = true;
			nice = nice - 1;

		}

		transition("timed_out_node", "how_node", hello_node, hello_node);

		check_out_transition("timed_out_node", "hello_node_out", hello_node, hello_node);
	}

nice_leave_node:
	if(hello_node.simple_children.contains("nice_leave_node")) {

		if(!hasActiveTimeout(nice_leave_node)) {

			emitDA("Ok, see you next time then. It was nice talking to you!");

			emitDA("Ok, see you next time then. It was nice talking to you!");

		}


		check_out_transition("nice_leave_node", "hello_node_out", hello_node, hello_node);
	}

answer_node:
	if(hello_node.simple_children.contains("answer_node")) {

		if(!hasActiveTimeout(answer_node)) {

			emitDA("I'm fine; thanks");
nice = nice + 2;

			emitDA("I'm fine; thanks");
			nice = nice + 2;

		}

		transition("answer_node", "something_else_node", hello_node, hello_node);

		check_out_transition("answer_node", "hello_node_out", hello_node, hello_node);
	}

choose_valediction_node:
	if(hello_node.simple_children.contains("choose_valediction_node")) {

		if(!hasActiveTimeout(choose_valediction_node)) {

			

		}

		transition("choose_valediction_node", "nice_leave_node", hello_node, hello_node);
		transition("choose_valediction_node", "mean_leave_node", hello_node, hello_node);

		check_out_transition("choose_valediction_node", "hello_node_out", hello_node, hello_node);
	}

thanks_node:
	if(hello_node.simple_children.contains("thanks_node")) {

		if(!hasActiveTimeout(thanks_node)) {

			emitDA("Thanks for sharing this with me.");
nice = nice + 1;

			emitDA("Thanks for sharing this with me.");
			nice = nice + 1;

		}

		transition("thanks_node", "something_else_node", hello_node, hello_node);

		check_out_transition("thanks_node", "hello_node_out", hello_node, hello_node);
	}

neg_node:
	if(hello_node.simple_children.contains("neg_node")) {

		if(!hasActiveTimeout(neg_node)) {

			

		}

		transition("neg_node_out", "answer_node", neg_node, hello_node);
		transition("neg_node_out", "something_else_node", neg_node, hello_node);

		check_out_transition("neg_node", "hello_node_out", hello_node, hello_node);
	}

hi_node:
	if(hello_node.simple_children.contains("hi_node")) {

		if(!hasActiveTimeout(hi_node)) {

			emitDA("hi");
timedOut = false;

			emitDA("hi");
			timedOut = false;

		}

		transition("hi_node", "timed_out_node", hello_node, hello_node);
		transition("hi_node", "how_node", hello_node, hello_node);

		check_out_transition("hi_node", "hello_node_out", hello_node, hello_node);
	}

how_node:
	if(hello_node.simple_children.contains("how_node")) {

		if(!hasActiveTimeout(how_node)) {

			emitDA("How are you?");

			emitDA("How are you?");

		}

		transition("how_node", "wait_node", hello_node, hello_node);

		check_out_transition("how_node", "hello_node_out", hello_node, hello_node);
	}

wait_node:
	if(hello_node.simple_children.contains("wait_node")) {

		if(!hasActiveTimeout(wait_node)) {

			

		}

		super_transition("wait_node", hello_node, "neg_node");
		transition("wait_node", "timed_out_node", hello_node, hello_node);
		transition("wait_node", "answer_node", hello_node, hello_node);
		super_transition("wait_node", hello_node, "pos_node");

		check_out_transition("wait_node", "hello_node_out", hello_node, hello_node);
	}

import pos_node;
import neg_node;
