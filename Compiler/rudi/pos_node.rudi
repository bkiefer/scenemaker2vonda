
setup_pos_node: 
	if(hello_node.initiated.contains("pos_node")) {
		if(!pos_node.active) {

			pos_node.active = true;
			hello_node.super_children += pos_node;

		}

		pos_node.simple_children += "pos_node_in";
		hello_node.initiated -= "pos_node";
	}


pass_by_pos_node: 
	if(!pos_node.active) {
		cancel;
	}

pos_node_in:
	if(pos_node.simple_children.contains("pos_node_in")) {

			

			transition("pos_node_in", "cool_node", pos_node, pos_node);

			check_out_transition("pos_node_in", "pos_node_out", pos_node, pos_node);
	}

pos_node_out: 
	if(pos_node.simple_children.contains("pos_node_out")) {

		if(test_inactive(pos_node)) {

			hello_node.super_children -= pos_node;
			set_inactive(pos_node);
		}

		check_out_transition("pos_node_out", "hello_node_out", pos_node, hello_node);
	}

great_node:
	if(pos_node.simple_children.contains("great_node")) {

		if(!hasActiveTimeout(great_node)) {

			emitDA("That's great");


		}


		check_out_transition("great_node", "pos_node_out", pos_node, pos_node);
	}

demand_answer_node:
	if(pos_node.simple_children.contains("demand_answer_node")) {

		if(!hasActiveTimeout(demand_answer_node)) {

			emitDA("Please give me an answer this time");


		}


		check_out_transition("demand_answer_node", "pos_node_out", pos_node, pos_node);
	}

why_node:
	if(pos_node.simple_children.contains("why_node")) {

		if(!hasActiveTimeout(why_node)) {

			emitDA("Why are you so happy?");


		}


		check_out_transition("why_node", "pos_node_out", pos_node, pos_node);
	}

cool_node:
	if(pos_node.simple_children.contains("cool_node")) {

		if(!hasActiveTimeout(cool_node)) {

			emitDA("Cool");


		}


		check_out_transition("cool_node", "pos_node_out", pos_node, pos_node);
	}

